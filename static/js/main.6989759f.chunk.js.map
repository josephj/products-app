{"version":3,"sources":["apis/products.js","modules/products/redux.js","modules/products/connectStore.js","components/Pager.js","components/PageLimit.js","modules/products/ProductList.js","modules/products/index.js","reducer.js","configureStore.js","index.js"],"names":["retrieve","fetch","then","response","json","retrieveProducts","dispatch","retrieveProductsStart","ProductsAPI","data","retrieveProductsComplete","catch","err","createAction","concat","setLimit","setPage","defaultState","isLoading","page","limit","products_redux","combineReducers","handleAction","state","_ref","payload","meta","handleActions","_handleActions","Object","defineProperty","_handleActions2","_ref2","_ref3","connect","store","_store$products","products","_store$products$meta","start","end","objectSpread","slice","total","length","bindActionCreators","stateProps","dispatchProps","onWillMount","onLimitChange","e","parseInt","target","value","onPageChange","Pager","onChange","count","Math","ceil","react_default","a","createElement","range","map","i","key","PageLimit","size","ProductList","_Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","props","_this$props","List","product","Item","id","Img","src","product_image","alt","product_name","description","price","Component","defaultProps","onPagechange","styled","ul","withConfig","displayName","componentId","li","img","connectStore","reducer","history","router","connectRouter","productsReducer","createBrowserHistory","middlewares","routerMiddleware","thunk","process","REACT_APP_ENV","push","logger","preloadedState","createStore","createRootReducer","compose","applyMiddleware","ReactDOM","render","es","esm","Switch","Route","path","Redirect","to","document","getElementById"],"mappings":"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","file":"static/js/main.6989759f.chunk.js","sourcesContent":["const API_PATH = 'https://whitechdevs.github.io/reactjs-test/products.json';\n\nexport const retrieve = () => {\n  return fetch(API_PATH).then(response => response.json());\n};\n","import { combineReducers } from 'redux';\nimport { createAction, handleAction, handleActions } from 'redux-actions';\nimport { ProductsAPI } from '../../apis';\n\nconst PREFIX = 'products';\n\nexport const retrieveProducts = () => dispatch => {\n  dispatch(retrieveProductsStart());\n  ProductsAPI.retrieve()\n    .then(data => {\n      dispatch(retrieveProductsComplete(data));\n    })\n    .catch(err => {\n      dispatch(retrieveProductsComplete(err));\n    });\n};\nexport const retrieveProductsStart = createAction(\n  `${PREFIX}/RETRIEVE_PRODUCTS_START`\n);\nexport const retrieveProductsComplete = createAction(\n  `${PREFIX}/RECEIVE_PRODUCTS_COMPLETE`\n);\nexport const setLimit = createAction(`${PREFIX}/SET_LIMIT`);\nexport const setPage = createAction(`${PREFIX}/SET_PAGE`);\n\nconst defaultState = {\n  data: [],\n  meta: {\n    isLoading: false,\n    page: 1,\n    limit: 8\n  }\n};\n\nexport default combineReducers({\n  data: handleAction(\n    retrieveProductsComplete,\n    (state, { payload }) => payload,\n    defaultState.data\n  ),\n  meta: combineReducers({\n    isLoading: handleActions(\n      {\n        [retrieveProducts]: () => true,\n        [retrieveProductsComplete]: () => false\n      },\n      defaultState.meta.isLoading\n    ),\n    page: handleActions(\n      {\n        [setPage]: (state, { payload }) => payload,\n        [setLimit]: () => 1\n      },\n      defaultState.meta.page\n    ),\n    limit: handleActions(\n      {\n        [setLimit]: (state, { payload }) => payload\n      },\n      defaultState.meta.limit\n    )\n  })\n});\n","import { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { retrieveProducts, setLimit, setPage } from './redux';\n\nconst mapStateToProps = store => {\n  const {\n    data,\n    meta,\n    meta: { page, limit }\n  } = store.products;\n  const start = (page - 1) * limit;\n  const end = start + limit;\n  return {\n    data: data.slice(start, end),\n    total: data.length,\n    ...meta\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({ retrieveProducts, setLimit, setPage }, dispatch);\n};\nconst mergeProps = (stateProps, dispatchProps) => {\n  const { retrieveProducts, setLimit, setPage } = dispatchProps;\n  return {\n    ...stateProps,\n    onWillMount: () => retrieveProducts(),\n    onLimitChange: e => setLimit(parseInt(e.target.value, 10)),\n    onPageChange: e => setPage(parseInt(e.target.value), 10)\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n);\n","import range from 'lodash.range';\nimport React from 'react';\nexport default ({ total, limit, value, onChange }) => {\n  const count = Math.ceil(total / limit);\n\n  return (\n    <select value={value} onChange={onChange}>\n      {range(count).map((page, i) => (\n        <option key={i} value={page + 1}>\n          Page {page + 1}\n        </option>\n      ))}\n    </select>\n  );\n};\n","import React from 'react';\nexport default ({ onChange, value }) => {\n  const sizes = [4, 8, 12, 24, 48, 96, 198];\n  return (\n    <select value={value} onChange={onChange}>\n      {sizes.map((size, i) => (\n        <option key={i} value={size}>\n          {size} per page\n        </option>\n      ))}\n    </select>\n  );\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport connectStore from './connectStore';\nimport { Pager, PageLimit } from '../../components';\nimport styled from 'styled-components';\n\nexport class ProductList extends Component {\n  static propTypes = {\n    data: PropTypes.array,\n    isLoading: PropTypes.bool,\n    page: PropTypes.number,\n    limit: PropTypes.number,\n    total: PropTypes.number,\n    onWillMount: PropTypes.func,\n    onLimitChange: PropTypes.func,\n    onPageChange: PropTypes.func\n  };\n  static defaultProps = {\n    data: [],\n    isLoading: false,\n    page: 1,\n    limit: 8,\n    total: 0,\n    onWillMount: () => {},\n    onLimitChange: () => {},\n    onPagechange: () => {}\n  };\n  componentWillMount() {\n    this.props.onWillMount();\n  }\n  render() {\n    const {\n      data,\n      limit,\n      page,\n      total,\n      onLimitChange,\n      onPageChange\n    } = this.props;\n    return (\n      <div>\n        <h1>All Products</h1>\n        <PageLimit value={limit} onChange={onLimitChange} />\n        <Pager\n          total={total}\n          limit={limit}\n          value={page}\n          onChange={onPageChange}\n        />\n        <List>\n          {data.map(product => (\n            <Item key={product.id}>\n              <Img src={product.product_image} alt=\"Product\" />\n              <br />\n              {product.product_name}\n              <br />\n              {product.description}\n              <br />${product.price}\n            </Item>\n          ))}\n        </List>\n        <PageLimit value={limit} onChange={onLimitChange} />\n        <Pager\n          total={total}\n          limit={limit}\n          value={page}\n          onChange={onPageChange}\n        />\n      </div>\n    );\n  }\n}\n\nconst List = styled.ul`\n  margin: 0;\n  list-style-type: none;\n  &:after {\n    content: '';\n    clear: both;\n    display: block;\n  }\n`;\nconst Item = styled.li`\n  float: left;\n  width: 300px;\n  height: 300px;\n  background: #ffc;\n  margin: 0 10px 10px 0;\n  text-align: center;\n`;\nconst Img = styled.img`\n  background: #000;\n  display: inline-block;\n  width: 200px;\n  height: 200px;\n  object-fit: contain;\n`;\n\nexport default connectStore(ProductList);\n","import reducer from './redux';\nimport ProductList from './ProductList';\n\nexport { reducer };\n\nexport default ProductList;\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport { reducer as productsReducer } from './modules/products';\n\nexport default history =>\n  combineReducers({\n    router: connectRouter(history),\n    products: productsReducer\n  });\n","import { routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport createRootReducer from './reducer';\n\nexport const history = createBrowserHistory();\n\nlet middlewares = [routerMiddleware(history), thunk];\nconst env = process.env.REACT_APP_ENV || process.env.NODE_ENV;\nif (env === 'development') {\n  middlewares.push(logger);\n}\n\nexport default function configureStore(preloadedState) {\n  const store = createStore(\n    createRootReducer(history),\n    preloadedState,\n    compose(applyMiddleware(...middlewares))\n  );\n\n  return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Redirect, Route, Switch } from 'react-router'; // react-router v4\nimport { ConnectedRouter } from 'connected-react-router';\nimport configureStore, { history } from './configureStore';\n\nimport './index.css';\nimport Products from './modules/products';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <div>\n        <Switch>\n          <Route path=\"/products\" render={() => <Products />} />\n          <Redirect to=\"/products\" />} />\n        </Switch>\n      </div>\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}